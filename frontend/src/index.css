@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme {
  --font-display: Bricolage Grotesque;
  --font-code: Jetbrains Mono;
  --color-zinc-150: rgb(236 236 236);
  --color-zinc-650: rgb(73 73 83);
  --color-zinc-750: rgb(53, 53, 59);
  --color-zinc-850: rgb(30, 30, 36);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
/* @layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}
} */

@layer utilities {
  @keyframes customPulse {
    0%,
    100% {
      opacity: 1;
      transform: scale(1.05);
    }
    50% {
      opacity: 0.7;
      transform: scale(0.9);
    }
  }

  .kernel-heartbeat {
    animation: customPulse 2.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
}

@font-face {
  font-family: 'Bricolage Grotesque';
  src: url('./assets/fonts/BricolageGrotesque_24pt-Regular.ttf');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Bricolage Grotesque';
  src: url('./assets/fonts/BricolageGrotesque_24pt-SemiBold.ttf');
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: 'Jetbrains Mono';
  src: url('./assets/fonts/JetBrainsMono-Regular.ttf');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Jetbrains Mono';
  src: url('./assets/fonts/JetBrainsMono-Bold.ttf');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Jetbrains Mono';
  src: url('./assets/fonts/JetBrainsMono-Italic.ttf');
  font-style: italic;
}

* {
  scrollbar-width: thin;
  --accent-color: rgb(var(--accent-color-values));
  --accent-color-highlight: rgba(var(--accent-color-values), 0.45);
  caret-color: var(--accent-color);
  /* Prevent text selection */
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  /* Prevent touch callouts */
  -webkit-touch-callout: none;
  /* Prevent content adjustment on iOS */
  -webkit-text-size-adjust: 100%;
}

html {
  cursor: default;
}

html:has(.dark) {
  color-scheme: dark;
}

.focus-visible {
  outline: 2px auto var(--accent-color);
}

input[type='text'],
textarea,
[contenteditable] {
  user-select: text;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
}

.draggable-block-menu {
  border-radius: 4px;
  padding: 2px 1px;
  cursor: grab;
  opacity: 0;
  position: absolute;
  left: 0;
  top: 0;
  will-change: transform;
}

::spelling-error {
  text-decoration: wavy red underline;
}

.list-sidebar-item {
  @apply flex flex-1 gap-2 items-center px-2 py-[0.2rem] rounded-md relative z-10 overflow-x-hidden transition-colors duration-[125ms] will-change-transform;
}
.list-sidebar-item:focus {
  outline: 2px auto;
}

.card-sidebar-item {
  @apply flex flex-1 gap-2 items-center border-b border-zinc-300 dark:border-zinc-600 px-2 py-[0.2rem] relative z-10 overflow-x-hidden transition-colors will-change-transform;
}
.card-sidebar-item:focus {
  outline: 2px auto;
}

#content-editable-editor > h1,
h1.dragging {
  @apply text-3xl leading-[3.25rem];
}

#content-editable-editor > h2,
h2.dragging {
  @apply text-2xl leading-[2.8rem];
}

#content-editable-editor > h3,
h3.dragging {
  @apply text-xl leading-[2.5rem];
}

#content-editable-editor > h4,
h4.dragging {
  @apply text-lg leading-[2.25rem] font-semibold;
}

#content-editable-editor > h5,
h5.dragging {
  @apply text-base leading-[2rem] font-bold;
}

#content-editable-editor > h6,
h6.dragging {
  @apply text-sm leading-[1.75rem] font-bold;
}

.button-invert {
  @apply bg-zinc-800! text-zinc-200! dark:bg-zinc-200! dark:text-zinc-900!;
}

/**
 * Codemirror styles
 */
.cm-theme {
  /* border-radius: 0.35rem; */
  /* overflow: hidden; */
  /* border-left: 2px solid var(--color-zinc-700);
  border-right: 2px solid var(--color-zinc-700); */
  height: auto;
  overflow-x: auto;
  overflow-y: initial;
}

.cm-content {
  font-family: 'Jetbrains Mono', monospace;
  font-size: 13px;
  padding: 12px 8px !important;
}

.cm-lineNumbers {
  @apply text-xs text-zinc-500;
}

.cm-gutter-element {
  padding: 0 3px 0 0 !important;
}

.cm-editor .cm-cursor {
  border-left: 2.5px var(--accent-color) solid !important;
}

/* Styling the vim cursor */
.ͼ37:not(.cm-focused) .cm-fat-cursor {
  outline-color: var(--accent-color) !important;
}

.ͼ37.cm-focused .cm-fat-cursor {
  background: var(--accent-color) !important;
}

.cm-theme .cm-selectionLayer .cm-selectionBackground {
  background: var(--accent-color-highlight) !important;
  opacity: 0.8;
}

.cm-focused {
  outline: none !important;
}
.cm-cursorLayer {
  animation: none !important;
}

.cm-tooltip-autocomplete {
  @apply !bg-zinc-50 dark:bg-zinc-800! text-zinc-900 dark:text-zinc-200 border-zinc-200! dark:border-zinc-750! !rounded-lg py-1.5 px-1 shadow-lg !border;
}

.cm-tooltip-autocomplete > ul > li {
  @apply !py-1 !px-1.5 rounded-md overflow-hidden;
}

.cm-tooltip-autocomplete > ul > li[aria-selected='true'] {
  @apply !bg-(--accent-color);
}
/* The signature that shows to the right of the completion label */
.cm-completionDetail {
  @apply text-[0.65rem] text-zinc-400;
}

.cm-tooltip-autocomplete
  > ul
  > li[aria-selected='true']
  > .cm-completionDetail {
  @apply text-zinc-50;
}

/* Adding some icons to the completion list */
.cm-tooltip-autocomplete .cm-completionIcon-path::before {
  content: '𝐩';
}

.cm-tooltip-autocomplete .cm-completionIcon-statement::before {
  content: '𝑺';
}

.cm-tooltip-autocomplete .cm-completionIcon-instance::before {
  content: '𝐢';
}

.cm-tooltip-autocomplete .cm-completionIcon-module::before {
  content: '𝐦';
}

/* Makes sure that the code block does not overlap with the traffic lights when in fullscreen mode */
div[data-is-fullscreen='true'] .cm-scroller {
  padding-top: 3rem !important;
}

/* Makes sure that the tabs are not overlapping with the icons in the code block */
.sp-tabs {
  padding-right: 106px;
}
.sp-tab-button {
  @apply font-code;
}

.dragging {
  @apply bg-zinc-50 text-left dark:bg-zinc-700 text-zinc-950 dark:text-zinc-100 border-zinc-200 dark:border-zinc-600 border-2 absolute top-0 left-[-9999px] px-2 py-0.5 rounded-lg font-display text-nowrap whitespace-nowrap overflow-hidden text-ellipsis;
}

.drag-grid {
  display: grid;
  grid-template-columns: 1.5rem 1fr;
  row-gap: 0.35rem;
}

.settings-row-grid {
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: 1rem;
}

/**
 * Excalidraw styles
 */

.main-menu-trigger {
  display: none !important;
}

/* The export options do not work with wails out of the box, so I am hiding this button */

/* .App-menu_top__left,
.main-menu-trigger {
    display: none !important;
} */

/* .excalidraw .App-menu_top {
    grid-template-columns: 1fr !important;
} */

/* The library button is useless as well */
.layer-ui__wrapper__top-right {
  display: none !important;
}

/**
 * Lexical Editor Styles (Tailwind does not work too well with)
 */

.link {
  @apply cursor-pointer text-(--accent-color) underline decoration-2 underline-offset-2 w-fit;
}

.link:hover {
  @apply filter brightness-90 dark:brightness-125;
}

.link-internal {
  @apply text-(--accent-color) underline decoration-2 underline-offset-2 transition-colors inline-flex items-baseline gap-0.5 w-fit cursor-pointer;
}

.link-internal:hover {
  @apply filter brightness-90 dark:brightness-125;
}

.root-ol {
  padding: 0;
  margin: 0;
  list-style: decimal;
}

.ol-1 {
  list-style-type: lower-alpha;
}

.check-list {
  list-style-type: none;
}

.root-ul {
  padding: 0;
  margin: 0;
  list-style: disc;
}

.ul-1 {
  list-style: circle;
}

.root-li {
  margin: 0 32px;
}

.nested-li {
  list-style-type: none;
}

.nested-li:before,
.nested-li:after {
  display: none !important;
}

.nested:before,
.nested:after {
  display: none;
}

.text-italic {
  font-style: italic;
}

.text-bold {
  font-weight: bold;
}

.text-underline {
  text-decoration: unset;
}

.text-strikethrough {
  @apply line-through decoration-[0.1rem];
}

.editor-scroller {
  min-height: 150px;
  border: 0;
  display: flex;
  position: relative;
  outline: 0;
  z-index: 0;
  overflow: auto;
  resize: vertical;
}

.editor {
  flex: auto;
  position: relative;
  resize: vertical;
  z-index: -1;
}

[contenteditable='true']:focus {
  outline: 0;
}

/* Table of contents list */
.toc-list-item {
  @apply break-words text-sm leading-6;
}

.toc-list-item::before {
  content: '•';
  font-size: 1.2em;
  vertical-align: top;
  margin-right: 0.5rem;
}
/* Image & Video Component */
/* p:has(> span > div > :is(img, video, span[data-katex="true"])),
h1:has(> span > div > :is(img, video, span[data-katex="true"])),
h2:has(> span > div > :is(img, video, span[data-katex="true"])),
h3:has(> span > div > :is(img, video, span[data-katex="true"])),
h4:has(> span > div > :is(img, video, span[data-katex="true"])),
h5:has(> span > div > :is(img, video, span[data-katex="true"])),
h6:has(> span > div > :is(img, video, span[data-katex="true"])) {
	This makes the image and video work correctly with inline content
	@apply block;
} */
/* Checkbox Styles */
.PlaygroundEditorTheme__listItemChecked,
.PlaygroundEditorTheme__listItemUnchecked {
  position: relative;
  margin-left: 8px;
  margin-right: 8px;
  padding-left: 24px;
  padding-right: 24px;
  list-style-type: none;
  outline: none;
  cursor: pointer;
  margin-block: 0.315rem;
  width: fit-content;
}

.PlaygroundEditorTheme__listItemChecked > span,
.PlaygroundEditorTheme__listItemUnchecked > span {
  cursor: text;
  text-decoration-thickness: 0.13rem;
  padding-left: 0.2rem;
}

.PlaygroundEditorTheme__listItemChecked {
  text-decoration-line: line-through;
  text-decoration-color: var(--accent-color);
}

.PlaygroundEditorTheme__listItemUnchecked:before,
.PlaygroundEditorTheme__listItemChecked:before,
.PlaygroundEditorTheme__listItemUnchecked:after,
.PlaygroundEditorTheme__listItemChecked:after {
  border-radius: 999px;
}

.PlaygroundEditorTheme__listItemUnchecked:before,
.PlaygroundEditorTheme__listItemChecked:before {
  content: '';
  width: 19px;
  height: 19px;
  top: 4px;
  left: 0;
  display: block;
  background-size: cover;
  position: absolute;
}

.PlaygroundEditorTheme__listItemUnchecked[dir='rtl']:before,
.PlaygroundEditorTheme__listItemChecked[dir='rtl']:before {
  left: auto;
  right: 0;
}

.PlaygroundEditorTheme__listItemUnchecked:before {
  border: 1px solid #999;
}

.PlaygroundEditorTheme__listItemChecked:before {
  border: 1px solid var(--accent-color);
  background-color: var(--accent-color);
  background-repeat: no-repeat;
}

.PlaygroundEditorTheme__listItemChecked:after {
  content: '';
  border-color: #fff;
  border-style: solid;
  position: absolute;
  display: block;
  top: 8.5px;
  width: 5.25px;
  left: 7.25px;
  right: 7px;
  height: 9.5px;
  transform: rotate(45deg);
  border-width: 0 2.3px 2.3px 0;
  cursor: pointer;
}

/* Table Styles */
.PlaygroundEditorTheme__table {
  border-collapse: collapse;
  border-spacing: 0;
  overflow-y: scroll;
  overflow-x: scroll;
  table-layout: fixed;
  width: max-content;
  margin: 30px 0;
}
.PlaygroundEditorTheme__tableSelection *::selection {
  background-color: transparent;
}
.PlaygroundEditorTheme__tableSelected {
  outline: 2px solid rgb(60, 132, 244);
}
.PlaygroundEditorTheme__tableCell {
  border: 1px solid #bbb;
  width: 75px;
  min-width: 75px;
  vertical-align: top;
  text-align: start;
  padding: 6px 8px;
  position: relative;
  outline: none;
}
.PlaygroundEditorTheme__tableCellSortedIndicator {
  display: block;
  opacity: 0.5;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background-color: #999;
}
.PlaygroundEditorTheme__tableCellResizer {
  position: absolute;
  right: -4px;
  height: 100%;
  width: 8px;
  cursor: ew-resize;
  z-index: 10;
  top: 0;
}
.PlaygroundEditorTheme__tableCellHeader {
  background-color: #f2f3f5;
  text-align: start;
}
.PlaygroundEditorTheme__tableCellSelected {
  background-color: #c9dbf0;
}
.PlaygroundEditorTheme__tableCellPrimarySelected {
  border: 2px solid rgb(60, 132, 244);
  display: block;
  height: calc(100% - 2px);
  position: absolute;
  width: calc(100% - 2px);
  left: -1px;
  top: -1px;
  z-index: 2;
}
.PlaygroundEditorTheme__tableCellEditing {
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);
  border-radius: 3px;
}
.PlaygroundEditorTheme__tableAddColumns {
  position: absolute;
  top: 0;
  width: 20px;
  background-color: #eee;
  height: 100%;
  right: -25px;
  animation: table-controls 0.2s ease;
  border: 0;
  cursor: pointer;
}
.PlaygroundEditorTheme__tableAddColumns:after {
  background-image: url(../images/icons/plus.svg);
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  display: block;
  content: ' ';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.4;
}
.PlaygroundEditorTheme__tableAddColumns:hover {
  background-color: #c9dbf0;
}
.PlaygroundEditorTheme__tableAddRows {
  position: absolute;
  bottom: -25px;
  width: calc(100% - 25px);
  background-color: #eee;
  height: 20px;
  left: 0;
  animation: table-controls 0.2s ease;
  border: 0;
  cursor: pointer;
}
.PlaygroundEditorTheme__tableAddRows:after {
  background-image: url(../images/icons/plus.svg);
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  display: block;
  content: ' ';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.4;
}
.PlaygroundEditorTheme__tableAddRows:hover {
  background-color: #c9dbf0;
}
@keyframes table-controls {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.PlaygroundEditorTheme__tableCellResizeRuler {
  display: block;
  position: absolute;
  width: 1px;
  background-color: rgb(60, 132, 244);
  height: 100%;
  top: 0;
}
.PlaygroundEditorTheme__tableCellActionButtonContainer {
  display: block;
  right: 5px;
  top: 6px;
  position: absolute;
  z-index: 4;
  width: 20px;
  height: 20px;
}
.PlaygroundEditorTheme__tableCellActionButton {
  background-color: #eee;
  display: block;
  border: 0;
  border-radius: 20px;
  width: 20px;
  height: 20px;
  color: #222;
  cursor: pointer;
}
.PlaygroundEditorTheme__tableCellActionButton:hover {
  background-color: #ddd;
}
