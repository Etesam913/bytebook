// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT


export class AddFolderResponse {
    success: boolean;
    message: string;

    constructor(source: Partial<AddFolderResponse> = {}) {
        const {success = false, message = ""} = source;
        this.success = success;
        this.message = message;
    }

    static createFrom(source: string | object = {}): AddFolderResponse {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new AddFolderResponse(parsedSource as Partial<AddFolderResponse>);
    }
}

export class CodeResponse {
    success: boolean;
    message: string;
    id: string;

    constructor(source: Partial<CodeResponse> = {}) {
        const {success = false, message = "", id = ""} = source;
        this.success = success;
        this.message = message;
        this.id = id;
    }

    static createFrom(source: string | object = {}): CodeResponse {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new CodeResponse(parsedSource as Partial<CodeResponse>);
    }
}

export class FolderResponse {
    success: boolean;
    message: string;
    data: string;

    constructor(source: Partial<FolderResponse> = {}) {
        const {success = false, message = "", data = ""} = source;
        this.success = success;
        this.message = message;
        this.data = data;
    }

    static createFrom(source: string | object = {}): FolderResponse {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new FolderResponse(parsedSource as Partial<FolderResponse>);
    }
}

export class GitResponse {
    status: string;
    message: string;
    error: error;

    constructor(source: Partial<GitResponse> = {}) {
        const {status = "", message = "", error = null} = source;
        this.status = status;
        this.message = message;
        this.error = error;
    }

    static createFrom(source: string | object = {}): GitResponse {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new GitResponse(parsedSource as Partial<GitResponse>);
    }
}

export class NoteMarkdownResponse {
    success: boolean;
    message: string;
    data: string;

    constructor(source: Partial<NoteMarkdownResponse> = {}) {
        const {success = false, message = "", data = ""} = source;
        this.success = success;
        this.message = message;
        this.data = data;
    }

    static createFrom(source: string | object = {}): NoteMarkdownResponse {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new NoteMarkdownResponse(parsedSource as Partial<NoteMarkdownResponse>);
    }
}

export class NoteResponse {
    success: boolean;
    message: string;
    data: string;

    constructor(source: Partial<NoteResponse> = {}) {
        const {success = false, message = "", data = ""} = source;
        this.success = success;
        this.message = message;
        this.data = data;
    }

    static createFrom(source: string | object = {}): NoteResponse {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new NoteResponse(parsedSource as Partial<NoteResponse>);
    }
}

export class UploadImageResponse {
    success: boolean;
    message: string;
    paths: string;

    constructor(source: Partial<UploadImageResponse> = {}) {
        const {success = false, message = "", paths = ""} = source;
        this.success = success;
        this.message = message;
        this.paths = paths;
    }

    static createFrom(source: string | object = {}): UploadImageResponse {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new UploadImageResponse(parsedSource as Partial<UploadImageResponse>);
    }
}
